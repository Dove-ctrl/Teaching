#include "vex.h"

//这里只会介绍常用的函数，其他的可以自己探索

void motor_API(){
    /* 
        spin()函数

        主要有3个重载函数，从上至下分别表示：用电压控制，用功率控制，用速度控制。
        参数从左往右代表：转向，数值，单位。转向默认fwd就可以，因为定义电机时已经考虑转向的影响。

        1.  最常用的是用电压控制，原因是可以绕过电机自带的PID控制算法，从而精准控制电机，
        而且用电压控制可以"超频"，突破电机额定转速，但是电机自带最大电压限制，
        一般是12.7v左右，实际加上负载和其他设备分压最终只有12v左右，
        因此电压控制的电压最大值最多也就12v，设定数值再高也只有12v左右，
        还有，在调用这个函数时，电压的单位需要加 voltageUnits:: 限定作用域，不然会奇妙报错。

        2.  用功率控制适合调试用，用于检查电机状态检查，或者快速搭建底盘驱动程序进行测试，
        内置一个PID控制（没啥用，还影响自己写的控制算法），一般不用这个函数在比赛时控制电机。

        3.  用速度控制同上，一般不用这个函数在比赛时控制电机。

        spin函数其实是一个指令，它告诉电机以何种方式旋转，
        如果你要控制电机，那么应该用一个循环去不断刷新电机的电压，
        也就是说，任何控制电机运动的代码，都应该有一个循环刷新电压，
     */
    Motor.spin(fwd , 12000 , voltageUnits::mV);
    Motor.spin(fwd , 100 , pct);
    Motor.spin(fwd , 200 , velocityUnits::rpm);

    /* 
        position()和resetPosition()函数

        这两个是关于电机内置编码器的函数。

        position()用于获取编码器的值，参数代表单位，有deg，rev两种，
        deg代表degree，也就是度数，rev代表reverse，也就是圈数，
        如果你比较细心，可能会发现还有第三个单位：raw，
        raw代表编码器收集来的未处理原始数据，一般不用。
        
        resetPosition()用于重置编码器的值。
     */
    Motor.position(rotationUnits::deg);
    Motor.resetPosition();

    /* 
        spinFor()和spinTo()函数

        这两个函数可以控制电机转动一段时间自己停下来，不需要去刷新电压。

        这里解释一下For和To的区别：
        For代表转动到相对于起始点的某个位置，To代表转动到相对于绝对零位的某个位置，
        也即是说For代表旋转到相对位置，To代表旋转到绝对位置，
        如果还是不好理解，建议自己实操感受一下。

        这两个函数都有很多重载，如果上面三个函数你看明白了的话，其实很好理解，
        实在不行，下载程序试试就知道了，这里就不多赘述了。

        唯一需要特别说明的是这两个函数的最后一个bool类型参数，
        这个参数代表是否等待运动完成就执行下一行代码，
        如果填false，代表这个函数一开始执行就会立刻开始执行下一行代码，电机的运动控制"被挂在后台了"，
        如果填true，代表这个函数只有等电机运动结束后才会执行下一行代码，
        因此，可以把最后一个接受函数指令的电机的这个参数设置为true，在它前面接受函数指令的电机的这个参数全部设置为false，
        就能控制这一堆电机同时开始运动，同时结束运动。

        这两个函数有一个致命缺点，就是电机接受函数指令这段时间里，无法再刷新电压，相当于失去控制，
        如果使用这两个函数去控制机器人自主移动，会导致很多算法无法使用，因此一般不用这个去写比赛程序，
        但是我建议小白先从这个写起，因为用这两个函数控制明白了机器人自主运动，
        你很容易就能理解后面进阶的控制算法，因此做出控制效果好的代码会很快。
     */
    Motor.spinFor(fwd , 720 , rotationUnits::deg , 200 , velocityUnits::rpm , false);
    Motor.spinFor(fwd , 1000 , sec , 200 , velocityUnits::rpm);
    Motor.spinTo(180 , rotationUnits::deg , true);

    /* 
        stop()函数

        这个函数控制电机停止转动。

        参数代表停止类型，有coast，brake，hold三种，
        coast表示滑行，电机停止后系统会因惯性继续运动一段时间，
        brake表示刹车，电机停止后会施加一个较小反向电压，克服惯性作用，系统会立即停止运动，
        hold表示保持，电机停止后会施加一个较大的方向快速变化的电压，克服外力作用，系统在停止运动后不会因外力作用改变位置，
        不填默认为coast。

        这个函数可以和spin函数配合使用，当控制算法没有输入时，可以用stop函数让电机停止运动。
     */
    Motor.stop();
    Motor.stop(brake);
}